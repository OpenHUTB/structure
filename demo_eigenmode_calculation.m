%% 计算皮层表面和皮层下体积的特征模式
% 重写脚本demo_eigenmode_calculation.sh

import py.surface_eigenmodes.*


%% 例子 1
% ### 例子 1
% # 计算左右fsLR_32k模板中等厚表面的200个表面特征模式，包括和不包括掩模，这将皮层与内侧壁区分开来。建议使用皮层掩膜。
% #
% # 需要的输入：（1）vtk格式的皮层表面；
% #            （2）txt或gii格式的皮层掩膜（皮层值为1，内侧壁值为0）
% # 注意1：如果输入曲面不是vtk文件（例如，FreeSurfer surf文件或gifti文件），则可以使用FreeSurfer命令mris_convert将其转换为vtk。
% # 注意2：fsLR_32k空间中的pial、white、sphere、expanded、very_inflated曲面的曲面结构也在data/template_Surface_volumes中提供，
% # 供您使用。只需更改下面的结构变量。
surface_interest='fsLR_32k';
structure='midthickness';
hemispheres= {'lh', 'rh'};
num_modes=200;
save_cut=0;

for hemisphere = 1 : numel(hemispheres)
    fprintf("\nProcessing %s\n", hemispheres{hemisphere});

    % 输入的表面文件
    surface_input_filename = fullfile(pwd, 'data', 'template_surfaces_volumes', ...
        sprintf("%s_%s-%s.vtk", ...
        surface_interest, structure, hemispheres{hemisphere}));

    % 带皮层掩膜（移除内壁）
    % 这是可取的方式
    is_mask=1;

    output_eval_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf("%s_%s-%s_eval_%d.txt", ...
        surface_interest, structure, hemispheres{hemisphere}, num_modes));

    output_emode_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf("%s_%s-%s_emode_%d.txt", ...
        surface_interest, structure, hemispheres{hemisphere}, num_modes));

    mask_input_filename = fullfile(pwd, 'data', 'template_surfaces_volumes', ...
        sprintf("%s_cortex-%s_mask.txt", ...
        surface_interest, hemispheres{hemisphere}));

    py_path = fullfile(matlabroot, 'software', 'python', 'python.exe');
    with_mask_cmd = [py_path, ' surface_eigenmodes.py ', ...
        char(surface_input_filename), ' ', ...
        char(output_eval_filename), ' ', ...
        char(output_emode_filename), ' ', ...
        '-save_cut ', int2str(save_cut), ' ', ...
        '-N ', int2str(num_modes), ' ', ...
        '-is_mask ', int2str(is_mask), ' ', ...
        '-mask ', char(mask_input_filename)];
    system(with_mask_cmd);


    % 没有皮层掩膜
    is_mask=0;
    output_eval_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf('no_mask_%s_%s-%s_eval_%d.txt', ...
        surface_interest, structure, hemispheres{hemisphere}, num_modes));

    output_emode_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf('no_mask_%s_%s-%s_emode_%d.txt', ...
        surface_interest, structure, hemispheres{hemisphere}, num_modes));

    without_mask_cmd = [py_path, ' surface_eigenmodes.py ', ...
        char(surface_input_filename), ' ', ...
        char(output_eval_filename), ' ', ...
        char(output_emode_filename), ' ', ...
        '-save_cut ', int2str(save_cut), ' ', ...
        '-N ', int2str(num_modes), ' ', ...
        '-is_mask ', int2str(is_mask)];
    system(without_mask_cmd);

end


%% 例子 2
% 计算丘脑（tha）的31个体积特征模式，其掩模来自 Harvard-Oxford 2mm分辨率图谱，HCP数据上记录了25%的概率阈值
% 
% 输入需要: (1) 丘脑nifti格式的体积掩蔽
% 
% 注意1：data/template_surface_volumes中还提供了纹状体（striatum）和海马体（hippo）的皮层下体积掩模供您使用。
% 只需更改下面的结构变量。

structure='tha';
hemispheres= {'lh', 'rh'};
num_modes=31;
normalization_type='none';
normalization_factor=1;

for hemisphere = 1 : numel(hemispheres)
    fprintf("\nProcessing %s\n", hemispheres{hemisphere});

    nifti_input_filename = fullfile(pwd, 'data', 'template_surfaces_volumes', ...
        sprintf("hcp_%s-%s_thr25.nii.gz", ...
        structure, hemispheres{hemisphere}));

    nifti_output_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf("hcp_%s-%s_emode_%d.nii.gz", ...
        structure, hemispheres{hemisphere}, num_modes));

    output_eval_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf("hcp_%s-%s_eval_%d.txt", ...
        structure, hemispheres{hemisphere}, num_modes));

    output_emode_filename = fullfile(pwd, 'data', 'output_template_eigenmodes', ...
        sprintf("hcp_%s-%s_emode_%d.txt", ...
        structure, hemispheres{hemisphere}, num_modes));

    thalamus_cmd = [py_path, ' volume_eigenmodes.py ', ...
        char(nifti_input_filename), ' ', ...
        char(nifti_output_filename), ' ', ...
        char(output_eval_filename), ' ', ...
        char(output_emode_filename), ' ', ...
        '-N ', int2str(num_modes), ' ', ...
        '-norm ', normalization_type, ' ', ...
        '-normfactor ', int2str(normalization_factor)];
    % 从windows上运行FreeSurfer：https://gbnegrini.com/post/how-to-run-freesurfer-windows-wsl/
    % WSL安装FreeSurfer的脚本：https://gist.github.com/gbnegrini/8d70c9b887798dbcfcd1654dcea279f6
    % system(thalamus_cmd);  % 报错：FreeSurfer(mri_mc, mv, gmsh)没有在windows上的版本
end



